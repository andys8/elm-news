var _user$project$ErrorManager$noErrors = function (model) {
	return _elm_lang$core$Native_Utils.cmp(
		_elm_lang$core$List$length(model),
		0) > 0;
};
var _user$project$ErrorManager$ackError = F2(
	function (error, model) {
		var _p0 = model;
		if (_p0.ctor === '[]') {
			return model;
		} else {
			var _p2 = _p0._1;
			var _p1 = _p0._0._1;
			return _elm_lang$core$Native_Utils.eq(_p1, error) ? {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: true, _1: error},
				_1: _p2
			} : {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: _p0._0._0, _1: _p1},
				_1: A2(_user$project$ErrorManager$ackError, error, _p2)
			};
		}
	});
var _user$project$ErrorManager$init = {ctor: '[]'};
var _user$project$ErrorManager$Error = F2(
	function (a, b) {
		return {display: a, raw: b};
	});
var _user$project$ErrorManager$AcknowledgeError = function (a) {
	return {ctor: 'AcknowledgeError', _0: a};
};
var _user$project$ErrorManager$ackErrorAfterNSeconds = F2(
	function (error, seconds) {
		return A2(
			_elm_lang$core$Task$perform,
			function (_p3) {
				return _user$project$ErrorManager$AcknowledgeError(error);
			},
			_elm_lang$core$Process$sleep(_elm_lang$core$Time$second * seconds));
	});
var _user$project$ErrorManager$update = F2(
	function (msg, model) {
		var _p4 = msg;
		if (_p4.ctor === 'AddError') {
			var _p5 = _p4._0;
			return {
				ctor: '_Tuple2',
				_0: A2(
					_elm_lang$core$Basics_ops['++'],
					model,
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: false, _1: _p5},
						_1: {ctor: '[]'}
					}),
				_1: _elm_lang$core$Platform_Cmd$batch(
					{
						ctor: '::',
						_0: A2(_user$project$ErrorManager$ackErrorAfterNSeconds, _p5, 5),
						_1: {
							ctor: '::',
							_0: _user$project$Analytics$registerEvent(
								A2(_user$project$Analytics$error, _p5.display, _p5.raw)),
							_1: {ctor: '[]'}
						}
					})
			};
		} else {
			return {
				ctor: '_Tuple2',
				_0: A2(_user$project$ErrorManager$ackError, _p4._0, model),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$ErrorManager$errorView = F2(
	function (index, _p6) {
		var _p7 = _p6;
		var _p9 = _p7._1;
		var top = (index * 80) + 12;
		return _p7._0 ? A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('&nbsp'),
				_1: {ctor: '[]'}
			}) : A2(
			_elm_lang$html$Html$map,
			function (_p8) {
				return _user$project$ErrorManager$AcknowledgeError(_p9);
			},
			A2(_user$project$Components_ErrorToast$view, _p9.display, top));
	});
var _user$project$ErrorManager$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		A2(_elm_lang$core$List$indexedMap, _user$project$ErrorManager$errorView, model));
};
var _user$project$ErrorManager$AddError = function (a) {
	return {ctor: 'AddError', _0: a};
};
