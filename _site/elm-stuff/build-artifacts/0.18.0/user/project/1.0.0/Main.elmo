var _user$project$Main$Model = F8(
	function (a, b, c, d, e, f, g, h) {
		return {currentPage: a, homePage: b, newslettersPage: c, newsletterPage: d, newsletterFiles: e, newsletters: f, now: g, width: h};
	});
var _user$project$Main$NewsletterClicked = {ctor: 'NewsletterClicked'};
var _user$project$Main$IconClicked = {ctor: 'IconClicked'};
var _user$project$Main$FetchedNewsletter = F2(
	function (a, b) {
		return {ctor: 'FetchedNewsletter', _0: a, _1: b};
	});
var _user$project$Main$fetchNewsletter = F2(
	function (name, model) {
		var _p0 = A2(_elm_lang$core$Dict$get, name, model.newsletters);
		if (_p0.ctor === 'Nothing') {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						newsletters: A3(_elm_lang$core$Dict$insert, name, _user$project$FetchData$Fetching, model.newsletters)
					}),
				{
					ctor: '::',
					_0: A2(
						_elm_lang$http$Http$send,
						_user$project$Main$FetchedNewsletter(name),
						_user$project$Newsletter_Newsletter$fetch(name)),
					_1: {ctor: '[]'}
				});
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{ctor: '[]'});
		}
	});
var _user$project$Main$FetchedFiles = function (a) {
	return {ctor: 'FetchedFiles', _0: a};
};
var _user$project$Main$fetchNewsletterFiles = function (model) {
	var _p1 = model.newsletterFiles;
	if (_p1.ctor === 'NotStarted') {
		return A2(_elm_lang$http$Http$send, _user$project$Main$FetchedFiles, _user$project$Newsletter_NewsletterFile$fetch);
	} else {
		return _elm_lang$core$Platform_Cmd$none;
	}
};
var _user$project$Main$WindowSize = function (a) {
	return {ctor: 'WindowSize', _0: a};
};
var _user$project$Main$CurrentDate = function (a) {
	return {ctor: 'CurrentDate', _0: a};
};
var _user$project$Main$AnalyticsEvent = function (a) {
	return {ctor: 'AnalyticsEvent', _0: a};
};
var _user$project$Main$NewsletterMsg = function (a) {
	return {ctor: 'NewsletterMsg', _0: a};
};
var _user$project$Main$NewslettersMsg = function (a) {
	return {ctor: 'NewslettersMsg', _0: a};
};
var _user$project$Main$HomePageMsg = function (a) {
	return {ctor: 'HomePageMsg', _0: a};
};
var _user$project$Main$body = function (model) {
	var _p2 = model.currentPage;
	switch (_p2.ctor) {
		case 'Home':
			return A2(
				_elm_lang$html$Html$map,
				_user$project$Main$HomePageMsg,
				A3(_user$project$HomePage$view, model.now, model.width, model.homePage));
		case 'Newsletters':
			return A2(
				_elm_lang$html$Html$map,
				_user$project$Main$NewslettersMsg,
				A2(_user$project$NewslettersPage$view, model.newsletterFiles, model.newslettersPage));
		case 'Newsletter':
			var _p3 = _p2._0;
			return A2(
				_elm_lang$html$Html$map,
				_user$project$Main$NewsletterMsg,
				A2(
					_user$project$NewsletterPage$view,
					{
						screenWidth: model.width,
						files: A2(
							_user$project$FetchData$default,
							{ctor: '[]'},
							model.newsletterFiles),
						filename: _p3,
						newsletter: A2(
							_elm_lang$core$Maybe$withDefault,
							_user$project$FetchData$NotStarted,
							A2(_elm_lang$core$Dict$get, _p3, model.newsletters))
					},
					model.newsletterPage));
		default:
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('not__found'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Page Not Found'),
					_1: {ctor: '[]'}
				});
	}
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('main'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Components_Header$view(
				{onLinkClick: _user$project$Main$AnalyticsEvent, onIconClick: _user$project$Main$IconClicked, onNewsletterClick: _user$project$Main$NewsletterClicked, screenWidth: model.width}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('body'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _user$project$Main$body(model),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_user$project$Components_Footer$view,
						A2(_elm_lang$core$Maybe$map, _elm_lang$core$Date$year, model.now),
						_user$project$Main$AnalyticsEvent),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$loadPage = F2(
	function (location, model) {
		var page = _user$project$Page$parse(location);
		var _p4 = function () {
			var _p5 = page;
			switch (_p5.ctor) {
				case 'Home':
					var _p8 = _p5._0;
					var registerPageView = A2(
						_elm_lang$core$Maybe$withDefault,
						_elm_lang$core$Platform_Cmd$none,
						A2(
							_elm_lang$core$Maybe$map,
							function (_p6) {
								return _user$project$Analytics$pageView(location.pathname);
							},
							_p8));
					var _p7 = A2(_user$project$HomePage$onPageLoad, _p8, model.homePage);
					var homePage = _p7._0;
					var cmd = _p7._1;
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{homePage: homePage}),
						{
							ctor: '::',
							_0: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$HomePageMsg, cmd),
							_1: {
								ctor: '::',
								_0: registerPageView,
								_1: {ctor: '[]'}
							}
						});
				case 'Newsletters':
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						model,
						{
							ctor: '::',
							_0: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$NewslettersMsg, _user$project$NewslettersPage$onPageLoad),
							_1: {
								ctor: '::',
								_0: _user$project$Main$fetchNewsletterFiles(model),
								_1: {
									ctor: '::',
									_0: _user$project$Analytics$pageView(location.pathname),
									_1: {ctor: '[]'}
								}
							}
						});
				case 'Newsletter':
					var _p10 = _p5._0;
					var _p9 = A2(_user$project$Main$fetchNewsletter, _p10, model);
					var updatedModel = _p9._0;
					var cmd = _p9._1;
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						updatedModel,
						{
							ctor: '::',
							_0: A2(
								_elm_lang$core$Platform_Cmd$map,
								_user$project$Main$NewsletterMsg,
								_user$project$NewsletterPage$onPageLoad(_p10)),
							_1: {
								ctor: '::',
								_0: cmd,
								_1: {
									ctor: '::',
									_0: _user$project$Main$fetchNewsletterFiles(model),
									_1: {
										ctor: '::',
										_0: _user$project$Analytics$pageView(location.pathname),
										_1: {ctor: '[]'}
									}
								}
							}
						});
				default:
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						model,
						{
							ctor: '::',
							_0: _user$project$Analytics$pageView(location.pathname),
							_1: {ctor: '[]'}
						});
			}
		}();
		var newModel = _p4._0;
		var cmd = _p4._1;
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			_elm_lang$core$Native_Utils.update(
				newModel,
				{currentPage: page}),
			{
				ctor: '::',
				_0: cmd,
				_1: {ctor: '[]'}
			});
	});
var _user$project$Main$init = function (location) {
	var _p11 = A2(
		_user$project$Main$loadPage,
		location,
		{currentPage: _user$project$Page$NotFound, homePage: _user$project$HomePage$init, newslettersPage: _user$project$NewslettersPage$init, newsletterPage: _user$project$NewsletterPage$init, newsletterFiles: _user$project$FetchData$NotStarted, newsletters: _elm_lang$core$Dict$empty, now: _elm_lang$core$Maybe$Nothing, width: 0});
	var model = _p11._0;
	var cmd = _p11._1;
	return A2(
		_elm_lang$core$Platform_Cmd_ops['!'],
		model,
		{
			ctor: '::',
			_0: cmd,
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$core$Task$perform, _user$project$Main$CurrentDate, _elm_lang$core$Date$now),
				_1: {
					ctor: '::',
					_0: A2(_elm_lang$core$Task$perform, _user$project$Main$WindowSize, _elm_lang$window$Window$size),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p12 = msg;
		switch (_p12.ctor) {
			case 'UrlChange':
				return A2(_user$project$Main$loadPage, _p12._0, model);
			case 'HomePageMsg':
				var _p13 = A2(_user$project$HomePage$update, _p12._0, model.homePage);
				var newHomePage = _p13._0;
				var cmds = _p13._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{homePage: newHomePage}),
					{
						ctor: '::',
						_0: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$HomePageMsg, cmds),
						_1: {ctor: '[]'}
					});
			case 'NewslettersMsg':
				var _p14 = A2(_user$project$NewslettersPage$update, _p12._0, model.newslettersPage);
				var newNewsletter = _p14._0;
				var cmds = _p14._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{newslettersPage: newNewsletter}),
					{
						ctor: '::',
						_0: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$NewslettersMsg, cmds),
						_1: {ctor: '[]'}
					});
			case 'NewsletterMsg':
				var _p15 = A2(_user$project$NewsletterPage$update, _p12._0, model.newsletterPage);
				var newNewsletter = _p15._0;
				var cmds = _p15._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{newsletterPage: newNewsletter}),
					{
						ctor: '::',
						_0: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$NewsletterMsg, cmds),
						_1: {ctor: '[]'}
					});
			case 'AnalyticsEvent':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					model,
					{
						ctor: '::',
						_0: _user$project$Analytics$registerEvent(_p12._0),
						_1: {ctor: '[]'}
					});
			case 'CurrentDate':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							now: _elm_lang$core$Maybe$Just(_p12._0)
						}),
					{
						ctor: '::',
						_0: A2(
							_elm_lang$core$Task$perform,
							_user$project$Main$CurrentDate,
							A2(
								_elm_lang$core$Task$andThen,
								function (_p16) {
									return _elm_lang$core$Date$now;
								},
								_elm_lang$core$Process$sleep(_elm_lang$core$Time$minute))),
						_1: {ctor: '[]'}
					});
			case 'WindowSize':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{width: _p12._0.width}),
					{ctor: '[]'});
			case 'FetchedFiles':
				if (_p12._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								newsletterFiles: _user$project$FetchData$Failed(_p12._0._0)
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								newsletterFiles: _user$project$FetchData$Fetched(_p12._0._0)
							}),
						{ctor: '[]'});
				}
			case 'FetchedNewsletter':
				if (_p12._1.ctor === 'Err') {
					var _p18 = _p12._1._0;
					var newsletters = A3(
						_elm_lang$core$Dict$insert,
						_p12._0,
						_user$project$FetchData$Failed(_p18),
						model.newsletters);
					var _p17 = A2(_elm_lang$core$Debug$log, 'error', _p18);
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{newsletters: newsletters}),
						{ctor: '[]'});
				} else {
					var newsletters = A3(
						_elm_lang$core$Dict$insert,
						_p12._0,
						_user$project$FetchData$Fetched(_p12._1._0),
						model.newsletters);
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{newsletters: newsletters}),
						{ctor: '[]'});
				}
			case 'IconClicked':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					model,
					{
						ctor: '::',
						_0: _elm_lang$navigation$Navigation$newUrl(_user$project$Links$home),
						_1: {ctor: '[]'}
					});
			default:
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					model,
					{
						ctor: '::',
						_0: _elm_lang$navigation$Navigation$newUrl(_user$project$Links$newsletters),
						_1: {ctor: '[]'}
					});
		}
	});
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(
				_elm_lang$core$Platform_Sub$map,
				_user$project$Main$HomePageMsg,
				_user$project$HomePage$subscriptions(model.homePage)),
			_1: {
				ctor: '::',
				_0: _elm_lang$window$Window$resizes(_user$project$Main$WindowSize),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$UrlChange = function (a) {
	return {ctor: 'UrlChange', _0: a};
};
var _user$project$Main$main = A2(
	_elm_lang$navigation$Navigation$program,
	_user$project$Main$UrlChange,
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
